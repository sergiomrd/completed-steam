{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"@nestjs/common\"","webpack:///./apps/api/src/environments/environment.dev.ts","webpack:///./apps/api/src/app/services/database.service.ts","webpack:///./apps/api/src/app/services/encrypt.service.ts","webpack:///external \"mongoose\"","webpack:///external \"@nestjs/mongoose\"","webpack:///./apps/api/src/app/services/game.service.ts","webpack:///./apps/api/src/app/services/user.service.ts","webpack:///./apps/api/src/app/services/auth.service.ts","webpack:///external \"@nestjs/passport\"","webpack:///external \"rxjs/operators\"","webpack:///external \"crypto-js\"","webpack:///./apps/api/src/app/models/dto/user.dto.ts","webpack:///./apps/api/src/app/auth/guards/steam-auth.guard.ts","webpack:///external \"@nestjs/core\"","webpack:///./apps/api/src/app/modules/app.module.ts","webpack:///./apps/api/src/app/modules/database.module.ts","webpack:///./apps/api/src/app/models/schemas/user.schema.ts","webpack:///./apps/api/src/app/auth/strategies/steam.strategy.ts","webpack:///external \"passport-steam\"","webpack:///./apps/api/src/app/controllers/game.controller.ts","webpack:///./apps/api/src/app/controllers/user.controller.ts","webpack:///./apps/api/src/app/controllers/auth.controller.ts","webpack:///./apps/api/src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","export const environment = {\r\n    production: false,\r\n    WEB_API: '67A6277297B21A7165425770B8CF1F66',\r\n    API: 'http://localhost:3333/',\r\n    FRONTEND_URL: 'http://localhost:4200/',\r\n    ENCRYPT: 'Y4AkaAlapñA.BdsaA'\r\n  };\r\n  ","import { User } from './../models/user.interface';\r\n\r\nimport { Model } from 'mongoose';\r\nimport { Injectable, Body} from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { UserDto } from './../models/dto/user.dto';\r\n\r\n@Injectable()\r\nexport class DatabaseService {\r\n  constructor(@InjectModel('User') private readonly userModel: Model<User>) {}\r\n\r\n  async create(userDto: UserDto): Promise<User> {\r\n    const createdUser = new this.userModel(userDto);\r\n    return createdUser.save();\r\n  }\r\n\r\n  async find(id: string): Promise<User[]> {\r\n      return this.userModel.find().exec();\r\n  }\r\n\r\n}\r\n","import * as CryptoJS from 'crypto-js';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class EncryptService {\r\n  constructor() {}\r\n\r\n  encrypt(value: string): string {\r\n    if (value) {\r\n      return CryptoJS.AES.encrypt(value, environment.ENCRYPT).toString();\r\n    }\r\n  }\r\n\r\n  decrypt(textToDecrypt: string) {\r\n    if (textToDecrypt) {\r\n      return CryptoJS.AES.decrypt(textToDecrypt.replace(/xd/g, \"+\").replace(/dx/g, \"/\"), environment.ENCRYPT).toString(\r\n        CryptoJS.enc.Utf8\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = require(\"mongoose\");","module.exports = require(\"@nestjs/mongoose\");","import { OwnedGamesResponse } from '../models/user.interface';\r\nimport { VanityUserResponse } from '../models/user.interface';\r\nimport { environment } from '../../environments/environment';\r\nimport { Injectable, HttpService } from '@nestjs/common';\r\nimport { Observable } from 'rxjs';\r\nimport { AxiosResponse, AxiosRequestConfig } from 'axios';\r\n\r\n@Injectable()\r\nexport class GameService {\r\n  constructor(private readonly httpService: HttpService) {}\r\n\r\n  getOwnedGames(steamId: string, showAppInfo: boolean, showFreeGames: boolean): Observable<AxiosResponse<OwnedGamesResponse>> {\r\n    return this.httpService.get<OwnedGamesResponse>(\r\n      'http://api.steampowered.com/IPlayerService/GetOwnedGames/v1', {params: {\r\n        key: environment.WEB_API,\r\n        steamid: steamId,\r\n        include_appinfo: showAppInfo,\r\n        include_played_free_games: showFreeGames\r\n      }}\r\n    );\r\n  }\r\n}\r\n","import { PlayerSummaries} from './../models/user.interface';\r\nimport { VanityUserResponse } from '../models/user.interface';\r\nimport { environment } from './../../environments/environment';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Injectable, HttpService } from '@nestjs/common';\r\nimport { Observable } from 'rxjs';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { AxiosResponse, AxiosRequestConfig } from 'axios';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private readonly httpService: HttpService) {}\r\n\r\n  getUserSteamId(name: string): Observable<AxiosResponse<VanityUserResponse>> {\r\n    return this.httpService.get<VanityUserResponse>(\r\n      'http://api.steampowered.com/ISteamUser/ResolveVanityURL/v0001/', {params: {\r\n        key: environment.WEB_API,\r\n        vanityurl: name\r\n      }}\r\n    );\r\n  }\r\n\r\n  getUserInfo(id: string): Observable<AxiosResponse<PlayerSummaries>> {\r\n    return this.httpService.get<PlayerSummaries>(\r\n      'https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v2/', {params: {\r\n        key: environment.WEB_API,\r\n        steamids: id\r\n      }}\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor() {\r\n  }\r\n\r\n}\r\n","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"crypto-js\");","export class UserDto {\r\n    readonly name: string;\r\n    readonly steamid: string;\r\n    readonly completedGames: string[];\r\n}","import { AuthGuard } from '@nestjs/passport';\r\nimport { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class SteamAuthGuard extends AuthGuard('steam') {}\r\n","module.exports = require(\"@nestjs/core\");","import { EncryptService } from './../services/encrypt.service';\nimport { DatabaseModule } from './database.module';\nimport { SteamStrategy } from '../auth/strategies/steam.strategy';\nimport { GameController } from '../controllers/game.controller';\nimport { GameService } from '../services/game.service';\nimport { UserController } from '../controllers/user.controller';\nimport { UserService } from '../services/user.service';\nimport { Module, HttpModule } from '@nestjs/common';\nimport { AuthService } from '../services/auth.service';\nimport { AuthController } from '../controllers/auth.controller';\n\n@Module({\n  imports: [HttpModule, DatabaseModule],\n  controllers: [UserController, GameController, AuthController],\n  providers: [UserService, GameService, AuthService, SteamStrategy, EncryptService]\n})\nexport class AppModule {}\n","import { UserSchema } from './../models/schemas/user.schema';\r\nimport { DatabaseService } from './../services/database.service';\r\nimport { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\n\r\n@Module({\r\nimports: [\r\nMongooseModule.forRoot('mongodb+srv://marodiense:OrKg86Iwmgvxo99G@completed-steam-2qxtl.azure.mongodb.net/completed-steam?retryWrites=true&w=majority'), \r\nMongooseModule.forFeature([{ name: 'User', schema: UserSchema }])],\r\n  providers: [ DatabaseService],\r\n  exports: [ DatabaseService],\r\n})\r\nexport class DatabaseModule {}","import * as mongoose from 'mongoose';\r\n\r\nexport const UserSchema = new mongoose.Schema({\r\n    steamid: {type: String, required: true},\r\n    completedGames: {type: [String]}\r\n})\r\n","import { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Strategy } from 'passport-steam';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class SteamStrategy extends PassportStrategy(Strategy, 'steam') {\r\n  constructor() {\r\n    super({\r\n      returnURL: `${environment.API}api/auth/steam/callback`,\r\n      realm: `${environment.API}`,\r\n      apiKey: environment.WEB_API,\r\n      profile: true\r\n    });\r\n  }\r\n\r\n  async validate(identifier, profile, done: Function) {\r\n    return done(null, profile);\r\n  }\r\n}\r\n","module.exports = require(\"passport-steam\");","import { GameService } from './../services/game.service';\r\nimport { Controller, Get, Param, Query, HttpService } from '@nestjs/common';\r\nimport { map } from 'rxjs/operators';\r\nimport { Game, GameBackground } from '../models/game.interface';\r\n\r\n@Controller('games')\r\nexport class GameController {\r\n  imageTypes: string[];\r\n  games: Game[];\r\n\r\n  constructor(\r\n    private readonly gameService: GameService,\r\n    private readonly http: HttpService\r\n  ) {}\r\n\r\n  @Get('owned/:id')\r\n  async getOwnedGamesByUser(\r\n    @Param('id') id,\r\n    @Query('showAppInfo') showAppInfo: boolean,\r\n    @Query('showFreeGames') showFreeGames: boolean,\r\n    @Query('limit') limit: number,\r\n    @Query('page') page: number\r\n  ) {\r\n    this.imageTypes = [\r\n      'library_600x900.jpg',\r\n      'library_hero.jpg',\r\n      'header.jpg',\r\n      'logo.png'\r\n    ];\r\n    return await this.gameService\r\n      .getOwnedGames(id, showAppInfo, showFreeGames)\r\n      .pipe(\r\n        map(async response => {\r\n          if (\r\n            response &&\r\n            response.data['response'] &&\r\n            response.data['response'].games\r\n          ) {\r\n            this.games = response.data['response'].games;\r\n            if (limit) {\r\n              this.games = response.data['response'].games.slice(\r\n                page * limit,\r\n                (+page + 1) * limit\r\n              );\r\n            }\r\n\r\n            await Promise.all(\r\n              this.games.map(async (game: Game) => {\r\n                game.background = await this.getImage(game.appid, 0);\r\n              })\r\n            );\r\n\r\n            return {\r\n              games: this.games.filter((game: Game) => game.background )\r\n            };\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  async getImage(appid: number, imagePos: number): Promise<GameBackground> {\r\n    const imageUrl = `https://steamcdn-a.akamaihd.net/steam/apps/${appid}/${this.imageTypes[imagePos]}`;\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(imageUrl, { responseType: 'blob' }).subscribe(\r\n        data => {\r\n          resolve({type: imagePos, url: imageUrl});\r\n        },\r\n        async error => {\r\n          if (imagePos <= this.imageTypes.length - 1) {\r\n            resolve(this.getImage(appid, imagePos + 1));\r\n          } else {\r\n            resolve(undefined);\r\n          }\r\n        }\r\n      );\r\n    });\r\n\r\n    // await this.http.get(imageUrl, { responseType: 'blob' }).subscribe(\r\n    //   data => {\r\n    //     return imageUrl;\r\n    //   },\r\n    //   async (error) => {\r\n    //     if (imagePos <= this.imageTypes.length-1) {\r\n    //       return await this.getImage(appid, imagePos + 1);\r\n    //     } else {\r\n    //       return undefined;\r\n    //     }\r\n    //   }\r\n    // );\r\n  }\r\n}\r\n","import { UserDto } from './../models/dto/user.dto';\r\nimport { DatabaseService } from './../services/database.service';\r\nimport { UserService } from './../services/user.service';\r\nimport { Controller, Get, Param, Query, Post, Body } from '@nestjs/common';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Controller('user')\r\nexport class UserController {\r\n  \r\n  constructor(private readonly userService: UserService, private readonly  databaseService: DatabaseService) {}\r\n  @Get()\r\n  getUserInSteam(@Query('id') id) {\r\n    return this.userService.getUserInfo(id).pipe(\r\n      map(response => {\r\n        if (response && response.data){\r\n          return response.data['response'];\r\n        } \r\n      })\r\n    );\r\n  }\r\n\r\n  @Get(':id')\r\n  async getUserById(@Param('id') id) {\r\n    return await this.databaseService.find(id);\r\n  }\r\n\r\n  @Post('create')\r\n  async create(@Body() createUserDto: UserDto) {\r\n    await this.databaseService.create(createUserDto['body']);\r\n  }\r\n}\r\n","import { EncryptService } from './../services/encrypt.service';\r\nimport { Controller, Get, Param, Query, UseGuards, Request, Res, Post, Logger, Req } from '@nestjs/common';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { SteamAuthGuard } from '../auth/guards/steam-auth.guard';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n  private readonly logger = new Logger(AuthController.name);\r\n  constructor(private readonly authService: AuthService, private readonly encryptService: EncryptService) {}\r\n\r\n\r\n  @Get('steam')\r\n  @UseGuards(SteamAuthGuard)\r\n  steamLogin(){}\r\n\r\n  @Get('steam/callback')\r\n  @UseGuards(SteamAuthGuard)\r\n  async steamLoginCallback(@Request() req, @Res() res)\r\n  {\r\n    let id = this.encryptService.encrypt(req.user.id);\r\n    console.log(id);\r\n    id = id.toString().replace(/\\+/g, \"xd\").replace(/\\//g, \"dx\");\r\n    console.log(id);\r\n    res.redirect(`${environment.FRONTEND_URL}main/${id}`);\r\n  }\r\n}\r\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/modules/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  app.enableCors();\n  const port = process.env.PORT || 3333;\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n"],"sourceRoot":""}